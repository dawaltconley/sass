@use "sass:list";
@use "sass:map";
@use "sass:math";
@use "sass:meta";
@use "sass:string";
@use "../config" as c;

$order: c.$order !default;

@function lt($a, $b, $order: $order) {
  @if meta.type-of($a) == "number" and meta.type-of($b) == "number" {
    @return $a < $b;
  }

  $a: string.to-lower-case($a + string.unquote(""));
  $b: string.to-lower-case($b + string.unquote(""));

  @for $i from 1 through math.min(string.length($a), string.length($b)) {
    $char-a: string.slice($a, $i, $i);
    $char-b: string.slice($b, $i, $i);

    @if $char-a and $char-b and list.index($order, $char-a) != list.index($order, $char-b) {
      @return list.index($order, $char-a) < list.index($order, $char-b);
    }
  }

  @return string.length($a) < string.length($b);
}

@function bp($breakpoint, $bp-list: c.$bp) {
    $type: meta.type-of($breakpoint);
    @if $type == string {
        @if map.has-key($bp-list, $breakpoint) {
            $breakpoint: map.get($bp-list, $breakpoint);
        } @else {
            @error "#{$breakpoint} is not a known breakpoint."
        }
    } @else if $type != number {
        @error "Breakpoint must either be a number or the name of a known breakpoint. '#{$breakpoint}' is a #{$type}"
    }

    @return $breakpoint;
}
