@use "sass:list";
@use "sass:map";
@use "functions/sides";
@use "mixins/layout";

/*
 * Basic
 */

.relative {
    position: relative;
}

.absolute {
    position: absolute;
}

.fixed {
    position: fixed;
}

.float-left {
    float: left;
}

.float-right {
    float: right;
}

.transparent {
    opacity: 0;
}

.content-box {
    box-sizing: content-box;
}

.clearfix:after {
    content: "";
    display: table;
    clear: both;
    border-spacing: 0;
}

/*
 * Sizes
 */

@each $name, $size in $sizes {
    @include layout.size($name, $size);
}

.max-width-none {
    max-width: none;
}

.max-height-none {
    max-height: none;
}

.slide-button-width {
    width: 20%;
    min-width: 80px;
}

/*
 * Margins
 */

@each $name, $value in $spacings {
    @include layout.margins($name, $value);
}

.indented-comment {
    margin-left: $default-spacing * 2;

    & & & & { // stop indenting after 3 levels
        margin-left: 0;
    }

    @media screen and (max-width: map.get($bp, tablet)) {
        margin-left: $default-spacing;

        & & & { // stop indenting after 2 levels
            margin-left: 0;
        }
    }
}

/*
 * Paddings
 */

@each $name, $value in $spacings {
    @include layout.padding($name, $value);
}

/*
 * Positioning
 */

@each $name, $value in $spacings {
    @include layout.positioning($name, $value);
}

.abs-center {
    @extend .absolute;
    top: 50%; left: 50%;
    @include transform(translate(-50%, -50%));
}

.abs-center-h {
    @extend .absolute;
    left: 50%;
    @include transform(translateX(-50%));
}

.abs-center-v {
    @extend .absolute;
    top: 50%;
    @include transform(translateY(-50%));
}

/*
 * Z-Axis
 */

@for $i from list.nth($z-range, 1) through list.nth($z-range, 2) {
    $class-name: if($i < 0, z-neg-#{($i * -1)}, z-#{$i});

    .#{$class-name} {
        @extend .relative;
        z-index: $i;
    }
}

.front {
    @extend .relative;
    z-index: list.nth($z-range, 2) + 1;
}

.back {
    @extend .relative;
    z-index: list.nth($z-range, 1) - 1;
}

/*
 * Borders
 */

@each $name, $styles in $borders {
    @include border($name, $styles);
    @include h-line($name, $styles);
}

.border-between > * {
    border-top-width: 0;
    border-left-width: 0;
    border-right-width: 0;

    &:last-child {
        border-bottom-width: 0;
    }
}

.border-around > * {
    border-left-width: 0;
    border-right-width: 0;

    &:nth-child(n + 2) {
        border-top-width: 0;
    }
}

.border-smooth {
    border-radius: 10px;
}

.ellipse {
    border-radius: 50%;
}
